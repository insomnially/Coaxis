import React from 'react';
import { useSpring, animated } from 'react-spring';
import { useInView } from 'react-intersection-observer';
import condition from '../img/condition.png';
import mainimage2 from '../img/mainimage2.png';
import './MainDiv.css';

export default function MainDiv() {
  const [ref1, inView1] = useInView({ threshold: 0.2 });
  const [ref2, inView2] = useInView({ threshold: 0.2 });
  const [ref3, inView3] = useInView({ threshold: 0.2 });

  const imageProps = useSpring({ opacity: inView1 ? 1 : 0, transform: inView1 ? 'translateX(0)' : 'translateX(-50px)', config: { duration: 1200 } });
  const descriptionProps = useSpring({ opacity: inView1 ? 1 : 0, transform: inView1 ? 'translateY(0)' : 'translateY(50px)', config: { duration: 1200, delay: 500 } });

  const mainImageProps = useSpring({ opacity: inView3 ? 1 : 0, transform: inView3 ? 'translateX(0)' : 'translateX(-50px)', config: { duration: 1200, delay: 500 } });

  const titleAnimations = Array.from({ length: 4 }).map((_, index) =>
    useSpring({
      opacity: inView2 ? 1 : 0,
      transform: inView2 ? 'translateY(0)' : 'translateY(30px)',
      config: { duration: 800, delay: index * 200 },
    })
  );

  const paragraphAnimations = Array.from({ length: 4 }).map((_, index) =>
    useSpring({
      opacity: inView2 ? 1 : 0,
      transform: inView2 ? 'translateY(0)' : 'translateY(20px)',
      config: { duration: 800, delay: index * 200 + 100 },
    })
  );

  return (
    <>
      <div className="containermain1">
        <animated.div ref={ref1} style={imageProps} className="mainimage1">
          <img src={condition} alt="condition" className="condition-image" />
        </animated.div>
        <animated.div style={descriptionProps} className="description1">
          <h1 className="description-title">–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä Coaxis Airflow Pro</h1>
          <animated.p style={descriptionProps} className="description-text">
            –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä Coaxis AirFlow Pro ‚Äî —ç—Ç–æ –Ω–∞—Ö–æ–¥–∫–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤ –æ–¥–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —Å—Ç–∏–ª—å, –º–æ—â–Ω–æ—Å—Ç—å –∏
            —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –≠—Ç–∞ –º–æ–¥–µ–ª—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —É–ª—å—Ç—Ä–∞—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º —Å –º–∞—Ç–æ–≤—ã–º –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–º –∫–æ—Ä–ø—É—Å–æ–º –∏ –ø–æ—á—Ç–∏
            –±–µ—Å—à—É–º–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ—ë –∏–¥–µ–∞–ª—å–Ω–æ–π –¥–ª—è —Å–ø–∞–ª—å–Ω–∏ –∏–ª–∏ –æ—Ñ–∏—Å–∞.
          </animated.p>
        </animated.div>
      </div>

      <div className="inforow" ref={ref2}>
        {[
          {
            emoji: 'üîã',
            title: '–í—ã—Å–æ–∫–∞—è –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
            text: '–ò–Ω–≤–µ—Ä—Ç–æ—Ä–Ω—ã–π –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä A++ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º. –ë—ã—Å—Ç—Ä–æ–µ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã.',
          },
          {
            emoji: 'üå¨Ô∏è',
            title: '–ò–¥–µ–∞–ª—å–Ω–∞—è –¢–∏—à–∏–Ω–∞',
            text: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è Silent Mode —Å–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —à—É–º–∞ –¥–æ 19 –¥–ë ‚Äî —Ç–∏—à–µ —à–µ–ø–æ—Ç–∞. –°–æ–∑–¥–∞–µ—Ç –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è —Å–Ω–∞ –∏ –æ—Ç–¥—ã—Ö–∞.',
          },
          {
            emoji: 'üå°Ô∏è',
            title: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –£–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å',
            text: 'Wi-Fi —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ø–æ–∑–≤–æ–ª—è—é—â–µ–µ –≤–∫–ª—é—á–∞—Ç—å, —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–∫–ª—é—á–∞—Ç—å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏.',
          },
          {
            emoji: '‚öôÔ∏è',
            title: '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å',
            text: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–ø–∞–¥–æ–≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –±–µ–∑–æ—Ç–∫–∞–∑–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ –ª—é–±—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.',
          },
        ].map(({ emoji, title, text }, index) => (
          <div key={index} className="info-item">
            <animated.h1 style={titleAnimations[index]} className="info-title">
              {emoji} {title}
            </animated.h1>
            <animated.p style={paragraphAnimations[index]} className="info-text">
              {text}
            </animated.p>
          </div>
        ))}
      </div>

      <div className="containermain2">
        <animated.div ref={ref3} style={mainImageProps} className="mainimage2">
            <img src={mainimage2} alt="condition" className="mainimage2-img" />
            <p className="mainimage2-text">
              Coaxis ‚Äî —ç—Ç–æ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
            </p>
        </animated.div>
      </div>
    </>
  );
}
